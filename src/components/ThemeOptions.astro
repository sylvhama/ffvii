---
declare global {
  interface Window {
    setFavicon: (background?: string, foreground?: string) => void;
  }
}

import { useTranslations } from "@i18n/utils";

const translate = useTranslations(Astro.currentLocale!);
---

<script>
  function check(selector: string) {
    const input = document.querySelector<HTMLInputElement>(selector);
    if (input) {
      input.checked = true;
    }
  }

  function init() {
    try {
      if (document.documentElement.classList.contains("dark")) {
        check('input[value="dark"]');
      } else if (document.documentElement.classList.contains("ff7")) {
        check('input[value="ff7"]');
      } else {
        check('input[value="light"]');
      }

      const toggleTheme = document.getElementById("toggle-theme");
      const themeColorTag = document.querySelector<HTMLMetaElement>(
        'meta[name="theme-color"]'
      );
      const computedStyle = getComputedStyle(document.documentElement);
      if (toggleTheme) {
        toggleTheme.querySelectorAll("input").forEach((input) => {
          input.addEventListener("change", (event) => {
            document.body.classList.add("duration-300");
            const target = event.target as HTMLInputElement;
            if (target.value === "dark") {
              localStorage.theme = "dark";
              document.documentElement.classList.add("dark");
              document.documentElement.classList.remove("ff7");
              themeColorTag!.content = computedStyle
                .getPropertyValue("--color-black")
                .trim();
              window.setFavicon?.();
            } else {
              document.documentElement.classList.remove("dark");
              if (target.value === "ff7") {
                document.documentElement.classList.add("ff7");
                localStorage.theme = "ff7";
                window.setFavicon?.("mediumblue");
                themeColorTag!.content = computedStyle
                  .getPropertyValue("--color-real-black")
                  .trim();
              } else {
                document.documentElement.classList.remove("ff7");
                localStorage.theme = "light";
                window.setFavicon?.("white", "black");
                themeColorTag!.content = computedStyle
                  .getPropertyValue("--color-white")
                  .trim();
              }
            }
          });
        });
      }
    } catch (error) {
      console.error(error);
    }
  }

  init();

  document.addEventListener("astro:after-swap", init);
</script>

<fieldset id="toggle-theme">
  <legend class="sr-only">{translate("pickTheme")}</legend>
  <div class="grid grid-cols-3 gap-4">
    <label
      class="pointer flex items-center flex-wrap gap-2 w-full border-2 border-black has-checked:border-pink rounded-md p-2 bg-black text-white focus-ring"
    >
      <input
        class="outline-hidden accent-pink"
        name="theme"
        value="dark"
        type="radio"
      />
      <span class="font-bold font-mono">{translate("darkHeading")}</span>
      <span>{translate("darkSubHeading")}</span>
    </label>
    <label
      class="pointer flex items-center flex-wrap gap-2 w-full border-2 border-white has-checked:border-pink rounded-md p-2 bg-real-white text-black focus-ring"
    >
      <input
        class="outline-hidden accent-pink"
        name="theme"
        value="light"
        type="radio"
      />
      <span class="font-bold font-mono">{translate("lightHeading")}</span>
      <span>{translate("lightSubHeading")}</span>
    </label>
    <label
      class="pointer flex items-center flex-wrap gap-2 w-full border-2 border-real-black has-checked:border-ff7-pink rounded-md p-2 bg-ff7 text-white focus-ring"
    >
      <input
        class="outline-hidden accent-ff7-pink"
        name="theme"
        value="ff7"
        type="radio"
      />
      <span class="font-bold font-mono">{translate("ff7Heading")}</span>
      <span>{translate("ff7SubHeading")}</span>
    </label>
  </div>
</fieldset>
