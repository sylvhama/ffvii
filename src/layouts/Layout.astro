---
interface Props {
  titlePrefix?: string;
  description?: string;
}

import { ClientRouter } from "astro:transitions";

import Skip from "@components/Skip.astro";
import Title from "@components/Title.astro";
import Anchor from "@components/Anchor.astro";
import Header from "@components/Header.astro";
import BustedSword from "@components/BustedSword.astro";
import { useTranslations, getOtherLocalePathname } from "@i18n/utils";

import "./style.css";

const translate = useTranslations(Astro.currentLocale!);
const isFrench = Astro.currentLocale === "fr";
const otherLocalePathname = getOtherLocalePathname(
  isFrench,
  Astro.url.pathname
);
const { titlePrefix, description: descriptionProp } = Astro.props;

const title = translate("title");
const titleMeta = titlePrefix ? `${titlePrefix} | ${title}` : title;
const description = descriptionProp || translate("description");
const otherLocaleUrl = new URL(otherLocalePathname, Astro.site).href;
const currentUrl = new URL(Astro.url.pathname, Astro.site).href;
const ogImageUrl = currentUrl.endsWith("/")
  ? currentUrl + "og.png"
  : currentUrl + "/og.png";
---

<!doctype html>
<html lang={Astro.currentLocale}>
  <head>
    <meta charset="utf-8" />
    <meta name="robots" content="noindex" />
    <link
      transition:persist
      rel="icon"
      href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><rect width='100' height='100' fill='white'/><text x='8' y='70' font-size='60' font-family='Arial' fill='black'>Ⅶ</text></svg>"
    />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="canonical" href={currentUrl} />
    <link
      rel="alternate"
      hreflang="en"
      href={isFrench ? otherLocaleUrl : currentUrl}
    />
    <link
      rel="alternate"
      hreflang="fr"
      href={isFrench ? currentUrl : otherLocaleUrl}
    />
    <title>{titleMeta}</title>
    <meta name="description" content={description} />

    <meta property="twitter:url" content={currentUrl} />
    <meta property="twitter:title" content={titleMeta} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={ogImageUrl} />
    <meta property="twitter:card" content="summary_large_imag" />

    <meta property="og:url" content={currentUrl} />
    <meta property="og:title" content={titleMeta} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:type" content="website" />
    <meta property="og:locale" content={Astro.currentLocale} />

    <meta name="theme-color" content="" />

    <link rel="preload" href="/cursor.webp" as="image" type="image/webp" />

    <ClientRouter fallback="none" />
  </head>
  <body
    class="relative mx-auto max-w-[75rem] bg-real-white md:p-4 md:pb-0 dark:bg-black dark:text-white ff7:bg-real-black ff7:text-white"
  >
    <template id="favicon">
      "data:image/svg+xml,<svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 100 100"
        ><rect width="100" height="100" fill="BACKGROUND_COLOR"></rect><text
          x="8"
          y="70"
          font-size="60"
          font-family="Arial"
          fill="FOREGROUND_COLOR">Ⅶ</text
        ></svg
      >"
    </template>
    <script is:inline define:vars={{ otherLocalePathname, isFrench }}>
      try {
        const browserLanguage = navigator.language || navigator.languages[0];
        const isFrenchDesired = browserLanguage.startsWith("fr");
        if (
          isFrenchDesired &&
          !isFrench &&
          !localStorage.disableFrenchRedirect
        ) {
          window.location.href = otherLocalePathname;
        }
      } catch (error) {
        console.error(error);
      }

      function init() {
        try {
          window.setFavicon = (backgorund = "black", foreground = "white") => {
            const faviconInner = document
              .querySelector("#favicon")
              .innerHTML.trim()
              .replaceAll('"', "'")
              .slice(1, -1);
            const iconLink = document.querySelector('link[rel="icon"]');

            iconLink?.setAttribute(
              "href",
              faviconInner
                ?.replace("BACKGROUND_COLOR", backgorund)
                .replace("FOREGROUND_COLOR", foreground)
            );
          };
          const themeColorTag = document.querySelector(
            'meta[name="theme-color"]'
          );
          const computedStyle = getComputedStyle(document.documentElement);
          if (
            localStorage.theme === "dark" ||
            (!("theme" in localStorage) &&
              window.matchMedia("(prefers-color-scheme: dark)").matches)
          ) {
            document.documentElement.classList.add("scheme-dark", "dark");
            document.documentElement.classList.remove("ff7");
            window.setFavicon();
            themeColorTag.content = computedStyle
              .getPropertyValue("--color-black")
              .trim();
          } else {
            document.documentElement.classList.remove("scheme-dark", "dark");
            if (localStorage.theme === "ff7") {
              document.documentElement.classList.add("scheme-dark", "ff7");
              window.setFavicon("mediumblue");
              themeColorTag.content = computedStyle
                .getPropertyValue("--color-real-black")
                .trim();
            } else {
              themeColorTag.content = computedStyle
                .getPropertyValue("--color-white")
                .trim();
            }
          }
        } catch (error) {
          console.error(error);
        }
      }

      init();

      document.addEventListener("astro:after-swap", init);
    </script>
    <div
      class="md:grid grid-cols-[auto_1fr] gap-8 ff7:bg-ff7 px-4 ff7:rounded-md border-4 border-transparent ff7:border-real-white"
    >
      <aside>
        <Skip />
        <div
          class="hidden md:grid h-full border-r border-black dark:border-white ff7:border-white relative before:absolute before:border-r before:border-black dark:before:border-white ff7:before:border-white before:h-6 before:-top-6 before:-right-[1px] before:hidden md:before:block ff7:before:hidden"
        >
          <Title classname="px-4 pr-4 vertical-text" isFrench={isFrench}>
            {title}
          </Title>
        </div>
      </aside>
      <div class="pt-4">
        <Header otherLocalePathname={otherLocalePathname} title={title}
          ><slot name="breadcrumb" /></Header
        >

        <slot name="nav" />

        <main id="main-content">
          <slot />
        </main>

        <BustedSword />

        <footer class="pb-4 flex flex-wrap gap-x-2 items-center">
          <p class="font-mono">
            {translate("madeBy")}
          </p>
          <Anchor href={`https://shamann.${isFrench ? "fr" : "dev"}`}
            >Sylvain Hamann</Anchor
          >
          <span class="font-mono" aria-hidden="true">|</span>
          <Anchor href="https://github.com/sylvhama/ffvii"
            >{translate("github")}</Anchor
          >
        </footer>
      </div>
    </div>
  </body>
</html>
